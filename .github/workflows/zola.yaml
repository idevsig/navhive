# Sample workflow for building and deploying a Zola site to GitHub Pages
name: Deploy Zola site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
      - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Zola CLI   
        run: |
          ZOLA_VERSION=$(curl -sL -o /dev/null -w %{url_effective} https://github.com/getzola/zola/releases/latest | xargs basename)
          curl -sL -o ${{ runner.temp }}/zola.tar.gz "https://github.com/getzola/zola/releases/download/${ZOLA_VERSION}/zola-${ZOLA_VERSION}-x86_64-unknown-linux-gnu.tar.gz"
          sudo tar -xvzf ${{ runner.temp }}/zola.tar.gz -C /usr/local/bin
          zola --version

      # - name: Checkout
      #   uses: actions/checkout@v4
      #   with:
      #     submodules: recursive
      #     fetch-depth: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Zola
        env:
          TZ: CST-8
          GIT_REPO_URL: ${{ github.server_url }}/${{ github.repository }}.git
        run: |
          mkdir pages
          cd pages
          git clone --depth=1 "$GIT_REPO_URL" themes/navhive
          rsync -av --progress themes/navhive/exampleSite/ . --exclude .git
          zola build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./pages/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4